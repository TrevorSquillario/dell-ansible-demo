###
# Playbook will get the current Boot Mode (UEFI/BIOS) and set OneTimeBoot to PXE device. 
# The 'idrac_bios' module will automatically apply changes, reboot the server and wait until the server has been rebooted. 
###
---
- hosts: all
  connection: local
  name: Set One Time Boot to PXE
  gather_facts: False
  vars:
    pxe_device: NIC.Integrated.1-1-1
  vars_files:
    - vault.yml
  tasks:
    - name: Get BIOS Attributes
      community.general.redfish_info: 
        baseuri: "{{ oob_host }}"
        username: "{{ vault_oob_username }}"
        password: "{{ vault_oob_password }}"
        category: Systems
        command: GetBiosAttributes
      register: result_attributes

    - name: Get BIOS boot mode and set fact boot_mode
      set_fact:
        boot_mode: "{{ result_attributes.redfish_facts.bios_attribute.entries.0.1.BootMode }}"

    - debug:
        msg: "Boot mode set to {{ boot_mode }}"
    
    - name: UEFI
      block:

        - name: Set OneTimeBoot (UEFI)
          dellemc.openmanage.idrac_bios:
            idrac_ip: "{{ oob_host }}"
            idrac_user: "{{ vault_oob_username }}"
            idrac_password: "{{ vault_oob_password }}"
            attributes:
              PxeDev1EnDis: "Enabled"
              PxeDev1Interface: "{{ pxe_device }}"
              OneTimeBootMode: "OneTimeUefiBootSeq"
              OneTimeUefiBootSeqDev: "NIC.PxeDevice.1-1"
          register: result

        - debug:
            var: result

      when: boot_mode == "Uefi" # Only run block when boot mode is Uefi

    - name: LegacyBoot
      block:
      
        - name: Set OneTimeBootMode (LegacyBoot)
          dellemc.openmanage.idrac_bios:
            baseuri: "{{ oob_host }}"
            username: "{{ vault_oob_username }}"
            password: "{{ vault_oob_password }}"
            category: Systems
            command: SetBiosAttributes
            bios_attributes:
              OneTimeBootMode: "OneTimeBootSeq"
              OneTimeBootSeqDev: "{{ pxe_device }}"
          register: result

        - debug:
            var: result

      when: boot_mode == "Bios" # Only run block when boot mode is Bios