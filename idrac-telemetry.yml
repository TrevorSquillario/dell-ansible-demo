---
- hosts: all
  connection: local
  name: Configure Telemetry
  gather_facts: False
  vars:
    idrac_attributes: 
      Telemetry.1.EnableTelemetry: "Enabled"
      TelemetryPowerMetrics.1.EnableTelemetry: "Enabled"
      TelemetryThermalMetrics.1.EnableTelemetry: "Enabled"
      TelemetryThermalSensor.1.EnableTelemetry: "Enabled"
      TelemetrySensor.1.EnableTelemetry: "Enabled"
      TelemetryCUPS.1.EnableTelemetry: "Enabled" # Renamed to TelemetrySystemUsage in iDRAC 4.40
      #TelemetrySystemUsage.1.EnableTelemetry: "Enabled"
      TelemetryStorageDiskSMARTData.1.EnableTelemetry: "Enabled"
    redfish_subscriptions:
      - type: metric
        state: present
        destination: "https://192.168.1.105:8188"
      - type: alert
        state: present
        destination: "https://192.168.1.105:8189"
  vars_files:
    - vault.yml
  tasks:
  - name: Set iDRAC Attributes
    community.general.idrac_redfish_config:
      baseuri: "{{ oob_host }}"
      username: "{{ vault_oob_username }}"
      password: "{{ vault_oob_password }}"
      category: Manager
      command: SetManagerAttributes
      manager_attributes: "{{ idrac_attributes }}" 
    ignore_errors: True

  - name: Import Server Configuration Profile
    dellemc.openmanage.idrac_server_config_profile:
      idrac_ip: "{{ oob_host }}"
      idrac_user: "{{ vault_oob_username }}"
      idrac_password: "{{ vault_oob_password }}"
      share_name: "{{ playbook_dir }}"
      command: "import" # import, export
      scp_file: "iDRACEventFiltersRedfish.json"
      scp_components: "ALL" # ALL, IDRAC, BIOS, NIC, RAID
      shutdown_type: "Graceful" # Graceful, Forced, NoReboot
      job_wait: False

  - name: Manage Redfish Subscription
    idrac_redfish_subscription: # Official module not released yet, using version from local /library 
      baseuri: "{{ oob_host }}"
      username: "{{ vault_oob_username }}"
      password: "{{ vault_oob_password }}"
      destination: "{{ item.destination }}"
      type: "{{ item.type }}"
      state: "{{ item.state }}"
    loop: "{{ redfish_subscriptions }}"