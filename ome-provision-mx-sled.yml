---
- hosts: mx-chassis
  connection: local
  name: Provision Host
  gather_facts: False
  vars:
    template_name: "002Test"
    device_servicetags: ["F1SW673", "F1SX673"] # Specify device service tag to limit by devices. Leave array empty [] to query devices in chassis. Use with chassis_filter.
    chassis_filter: "" # Specify chassis service tag to limit devices on a single chassis. Leave blank to update all devices in chassis group.
  vars_files:
    - vault.yml
  tasks:
    - block:
        - name: Get compute devices
          dellemc.openmanage.ome_device_info:
            hostname: "{{ default_ome_host }}"
            username: "{{ vault_ome_username }}"
            password: "{{ vault_ome_password }}"
            fact_subset: "basic_inventory"
            system_query_options:
              filter: "Type eq 1000" # 1000 = Compute Device Type
          register: output_device_info

        - name: Build a list of device service tags for chassis group
          set_fact:
            device_servicetags: "{{ device_servicetags }} + [ '{{ item.DeviceServiceTag }}' ]"
          when: chassis_filter == ""
          loop: "{{ output_device_info.device_info.value }}" 

        - name: Build a list of device service tags for single chassis
          set_fact:
            device_servicetags: "{{ device_servicetags }} + [ '{{ item.DeviceServiceTag }}' ]"
          vars:
            query: "[?ChassisServiceTag=='{{ service_tag }}']" # Query string for json_query filter
          when: chassis_filter != ""
          loop: "{{ output_device_info.device_info.value | default([]) | json_query(query) }}" # Filter device list by the service tag of the chassis
      when: device_servicetags | length == 0 # Don't run when specifing device_servicetags manually

    - name: Deploy Template
      dellemc.openmanage.ome_template:
        hostname:  "{{ hostname }}"
        username: "{{ vault_ome_username }}"
        password: "{{ vault_ome_password }}"
        command: "deploy"
        template_name: "{{ template_name }}"
        device_service_tag: "{{ device_servicetags }}"
#        attributes:
#          NetworkBootIsoModel:
#            BootToNetwork: true
#            ShareType: "NFS"
#            IsoPath: "/mnt/data/iso/CentOS7-Unattended.iso"
#            IsoTimeout: 1 # Hour
#            ShareDetail:
#              IpAddress: "100.79.7.16"
#              ShareName: "iso"
#              User: ""
#              Password: ""
      notify: WaitForJob
      register: output
    
    - debug: 
        var: output

  handlers:
    - name: WaitForJob
      dellemc.openmanage.ome_job_info:
        hostname:  "{{ hostname }}"
        username: "{{ vault_ome_username }}"
        password: "{{ vault_ome_password }}"
        job_id: "{{ output.return_id }}"
      register: output_job
      failed_when: output_job.job_info.LastRunStatus.Name == 'Failed'
      changed_when: output_job.job_info.LastRunStatus.Name == 'Completed'
      until: output_job.job_info.LastRunStatus.Name in ['Completed', 'Failed', 'Warning', 'Aborted', 'Paused', 'Stopped', 'Cancelled']
      retries: 90 
      delay: 10 # 15 Minutes